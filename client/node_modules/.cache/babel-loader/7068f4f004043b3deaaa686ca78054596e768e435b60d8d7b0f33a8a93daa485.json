{"ast":null,"code":"import _objectSpread from\"/Users/moritzsalla/Documents/GitHub/socketio-fiber-starter/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";/* eslint-disable react/no-unknown-property */import React,{useMemo,useRef}from'react';import{useFrame}from'react-three-fiber';import{getFormattedRGBColor,getRandomScale}from'../utils/scene';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ROTATION_FACTOR=0.01;var Particle=function Particle(props){var _ref=props!==null&&props!==void 0?props:{},color=_ref.color;// This reference will give us direct access to the mesh\nvar meshRef=useRef();// Every balloon has a different scale\n// for demonstration purposes\nvar randomScale=useMemo(function(){return getRandomScale();},[]);// Rotate mesh every frame\nuseFrame(function(){if(!(meshRef!==null&&meshRef!==void 0&&meshRef.current))return;meshRef.current.rotation.x=meshRef.current.rotation.y+=ROTATION_FACTOR;});return/*#__PURE__*/_jsxs(\"mesh\",_objectSpread(_objectSpread({},props),{},{ref:meshRef,scale:randomScale,children:[/*#__PURE__*/_jsx(\"sphereBufferGeometry\",{attach:\"geometry\",args:[0.2,32,32]}),/*#__PURE__*/_jsx(\"meshStandardMaterial\",{attach:\"material\",color:getFormattedRGBColor(color)})]}));};export default Particle;","map":{"version":3,"names":["React","useMemo","useRef","useFrame","getFormattedRGBColor","getRandomScale","ROTATION_FACTOR","Particle","props","color","meshRef","randomScale","current","rotation","x","y"],"sources":["/Users/moritzsalla/Documents/GitHub/socketio-fiber-starter/client/src/components/Particle.js"],"sourcesContent":["/* eslint-disable react/no-unknown-property */\nimport React, { useMemo, useRef } from 'react';\nimport { useFrame } from 'react-three-fiber';\nimport { getFormattedRGBColor, getRandomScale } from '../utils/scene';\n\nconst ROTATION_FACTOR = 0.01;\n\nconst Particle = (props) => {\n  const { color } = props ?? {};\n\n  // This reference will give us direct access to the mesh\n  const meshRef = useRef();\n\n  // Every balloon has a different scale\n  // for demonstration purposes\n  const randomScale = useMemo(() => {\n    return getRandomScale();\n  }, []);\n\n  // Rotate mesh every frame\n  useFrame(() => {\n    if (!meshRef?.current) return;\n    meshRef.current.rotation.x = meshRef.current.rotation.y += ROTATION_FACTOR;\n  });\n\n  return (\n    <mesh {...props} ref={meshRef} scale={randomScale}>\n      <sphereBufferGeometry attach='geometry' args={[0.2, 32, 32]} />\n      <meshStandardMaterial\n        attach='material'\n        color={getFormattedRGBColor(color)}\n      />\n    </mesh>\n  );\n};\n\nexport default Particle;\n"],"mappings":"sJAAA,8CACA,MAAOA,MAAK,EAAIC,OAAO,CAAEC,MAAM,KAAQ,OAAO,CAC9C,OAASC,QAAQ,KAAQ,mBAAmB,CAC5C,OAASC,oBAAoB,CAAEC,cAAc,KAAQ,gBAAgB,CAAC,wFAEtE,GAAMC,gBAAe,CAAG,IAAI,CAE5B,GAAMC,SAAQ,CAAG,QAAXA,SAAQ,CAAIC,KAAK,CAAK,CAC1B,SAAkBA,KAAK,SAALA,KAAK,UAALA,KAAK,CAAI,CAAC,CAAC,CAArBC,KAAK,MAALA,KAAK,CAEb;AACA,GAAMC,QAAO,CAAGR,MAAM,EAAE,CAExB;AACA;AACA,GAAMS,YAAW,CAAGV,OAAO,CAAC,UAAM,CAChC,MAAOI,eAAc,EAAE,CACzB,CAAC,CAAE,EAAE,CAAC,CAEN;AACAF,QAAQ,CAAC,UAAM,CACb,GAAI,EAACO,OAAO,SAAPA,OAAO,WAAPA,OAAO,CAAEE,OAAO,EAAE,OACvBF,OAAO,CAACE,OAAO,CAACC,QAAQ,CAACC,CAAC,CAAGJ,OAAO,CAACE,OAAO,CAACC,QAAQ,CAACE,CAAC,EAAIT,eAAe,CAC5E,CAAC,CAAC,CAEF,mBACE,4CAAUE,KAAK,MAAE,GAAG,CAAEE,OAAQ,CAAC,KAAK,CAAEC,WAAY,wBAChD,6BAAsB,MAAM,CAAC,UAAU,CAAC,IAAI,CAAE,CAAC,GAAG,CAAE,EAAE,CAAE,EAAE,CAAE,EAAG,cAC/D,6BACE,MAAM,CAAC,UAAU,CACjB,KAAK,CAAEP,oBAAoB,CAACK,KAAK,CAAE,EACnC,IACG,CAEX,CAAC,CAED,cAAeF,SAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}